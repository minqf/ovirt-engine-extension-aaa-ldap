#
# Copyright 2012-2015 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#

include = <simple.properties>

attrmap.map-principal-record.attr.PrincipalRecord_DN.map = _dn
attrmap.map-principal-record.attr.PrincipalRecord_ID.map = ipaUniqueID
attrmap.map-principal-record.attr.PrincipalRecord_NAME.map = uid
attrmap.map-principal-record.attr.PrincipalRecord_PRINCIPAL.map = uid
attrmap.map-principal-record.attr.PrincipalRecord_DISPLAY_NAME.map = displayName
attrmap.map-principal-record.attr.PrincipalRecord_DEPARTMENT.map = department
attrmap.map-principal-record.attr.PrincipalRecord_FIRST_NAME.map = givenName
attrmap.map-principal-record.attr.PrincipalRecord_LAST_NAME.map = sn
attrmap.map-principal-record.attr.PrincipalRecord_TITLE.map = title
attrmap.map-principal-record.attr.PrincipalRecord_EMAIL.map = mail
attrmap.map-principal-record.attr._ipa_krbpasswordexpiration.map = krbpasswordexpiration
attrmap.map-principal-record.attr._ipa_krbpasswordexpiration.conversion = DATE

attrmap.map-group-record.attr.GroupRecord_DN.map = _dn
attrmap.map-group-record.attr.GroupRecord_ID.map = ipaUniqueID
attrmap.map-group-record.attr.GroupRecord_NAME.map = cn
attrmap.map-group-record.attr.GroupRecord_DISPLAY_NAME.map = description

sequence-init.init.600-ipa-init-vars = ipa-init-vars
sequence.ipa-init-vars.010.description = set base dn
sequence.ipa-init-vars.010.type = var-set
sequence.ipa-init-vars.010.var-set.variable = simple_attrsBaseDN
sequence.ipa-init-vars.010.var-set.value = defaultNamingContext
sequence.ipa-init-vars.020.description = set user attribute
sequence.ipa-init-vars.020.type = var-set
sequence.ipa-init-vars.020.var-set.variable = simple_attrsUserName
sequence.ipa-init-vars.020.var-set.value = uid
sequence.ipa-init-vars.030.description = set principal record attributes
sequence.ipa-init-vars.030.type = var-set
sequence.ipa-init-vars.030.var-set.variable = simple_attrsPrincipalRecord
sequence.ipa-init-vars.030.var-set.value = ipaUniqueID, uid, cn, displayName, department, givenName, sn, title, mail, krbpasswordexpiration
sequence.ipa-init-vars.040.description = set user object filter
sequence.ipa-init-vars.040.type = var-set
sequence.ipa-init-vars.040.var-set.variable = simple_filterUserObject
sequence.ipa-init-vars.040.var-set.value = (objectClass=person)(ipaUniqueID=*)
sequence.ipa-init-vars.050.description = set group record attributes
sequence.ipa-init-vars.050.type = var-set
sequence.ipa-init-vars.050.var-set.variable = simple_attrsGroupRecord
sequence.ipa-init-vars.050.var-set.value = ipaUniqueID, cn, description
sequence.ipa-init-vars.060.description = set group object filter
sequence.ipa-init-vars.060.type = var-set
sequence.ipa-init-vars.060.var-set.variable = simple_filterGroupObject
sequence.ipa-init-vars.060.var-set.value = (objectClass=ipausergroup)(ipaUniqueID=*)
sequence.ipa-init-vars.070.description = set group member filter
sequence.ipa-init-vars.070.type = var-set
sequence.ipa-init-vars.070.var-set.variable = simple_attrGroupMemberDN
sequence.ipa-init-vars.070.var-set.value = member
sequence.ipa-init-vars.080.description = set simple_principalPostFetch
sequence.ipa-init-vars.080.type = var-set
sequence.ipa-init-vars.080.var-set.variable = simple_principalPostFetch
sequence.ipa-init-vars.080.var-set.value = ipa-post-principal-fetch

sequence.ipa-account-expired.010.description = set status
sequence.ipa-account-expired.010.type = var-set
sequence.ipa-account-expired.010.var-set.variable = resultCode
sequence.ipa-account-expired.010.var-set.value = CREDENTIALS_INVALID
sequence.ipa-account-expired.020.description = set status
sequence.ipa-account-expired.020.type = var-set
sequence.ipa-account-expired.020.var-set.variable = authTranslatedMessage
sequence.ipa-account-expired.020.var-set.value = CREDENTIALS_EXPIRED
sequence.ipa-account-expired.030.description = stop
sequence.ipa-account-expired.030.type = stop

##################################################################################
# If 'krbpasswordexpiration' attribute does not exist or it's empty in IPA server,
# then the account should never expire. To achieve this goal and not break
# "account expiration" logic for other LDAP servers, we set this attribute
# to 4102444800000 which means that account will expire at 2100-01-01 00:00 UTC.
##################################################################################
sequence.ipa-post-principal-fetch.010.description = store expiration
sequence.ipa-post-principal-fetch.010.type = var-set
sequence.ipa-post-principal-fetch.010.var-set.variable = _ipa_krbpasswordexpiration
sequence.ipa-post-principal-fetch.010.var-set.value = ${seq:search_attr__ipa_krbpasswordexpiration}
sequence.ipa-post-principal-fetch.020.condition.type = compare
sequence.ipa-post-principal-fetch.020.condition.compare.left =
sequence.ipa-post-principal-fetch.020.condition.compare.right = ${seq:_ipa_krbpasswordexpiration}
sequence.ipa-post-principal-fetch.020.type = var-set
sequence.ipa-post-principal-fetch.020.var-set.variable = _ipa_krbpasswordexpiration
sequence.ipa-post-principal-fetch.020.var-set.value = 4102444800000

sequence.ipa-post-auth.010.description = keep running only if auth is success
sequence.ipa-post-auth.010.condition.type = compare
sequence.ipa-post-auth.010.condition.compare.left = ${seq:authTranslatedMessage}
sequence.ipa-post-auth.010.condition.compare.right = SUCCESS
sequence.ipa-post-auth.010.condition.not = true
sequence.ipa-post-auth.010.type = return
sequence.ipa-post-auth.020.description = get time
sequence.ipa-post-auth.020.type = time-get
sequence.ipa-post-auth.020.time-get.variable = _ipa_now
sequence.ipa-post-auth.030.description = get account expiration
sequence.ipa-post-auth.030.condition.type = compare
sequence.ipa-post-auth.030.condition.compare.conversion = numeric
sequence.ipa-post-auth.030.condition.compare.left = ${seq:_ipa_krbpasswordexpiration}
sequence.ipa-post-auth.030.condition.compare.right = ${seq:_ipa_now}
sequence.ipa-post-auth.030.condition.compare.result = -1
sequence.ipa-post-auth.030.type = call
sequence.ipa-post-auth.030.call.name = ipa-account-expired

sequence.ipa-authn.010.description = call simple
sequence.ipa-authn.010.type = call
sequence.ipa-authn.010.call.name = simple-authn
sequence.ipa-authn.020.description = call ipa-post-auth
sequence.ipa-authn.020.type = call
sequence.ipa-authn.020.call.name = ipa-post-auth

sequence.authn.stub.description = call ipa
sequence.authn.stub.type = call
sequence.authn.stub.call.name = ipa-authn
