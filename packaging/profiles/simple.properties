#
# Copyright 2012-2015 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#

#
# Simple LDAP configuration.
#
# Single namespace, simple bind, dn based bind.
#
# Sequence variables must be set:
# - simple_bindFormat
#   bind format to use, default: dn, should be set to realm if sasl is used.
# - simple_baseDN
#   specify baseDN to use, override automatic detection.
# - simple_namespaceDefault
#   use this as default namespace.
# - simple_attrsBaseDN
#   base DN attribute out of RootDSE.
# - simple_attrsBaseDNIndex
#   base DN attribute index out of RootDSE.
# - simple_attrsUserName
#   attribute of user name.
# - simple_attrsPrincipalRecord
#   principal record attributes.
# - simple_filterUserObject
#   user object filter component.
# - simple_groupLogic
#   member - use group to resolve members.
#   memberOf - use object to resolve groups.
# - simple_attrGroupMemberDN
#   attribute of group member based on DN.
# - simple_attrMemberOf
#   attribute of object group based on DN.
# - simple_principalPostFetch
#   gets control right after principal is fetched.
#
# Attribute mapping must be registered:
# - simple-map-namespace
# - map-principal-record
# - map-group-record
#
# Pool names:
# - authz
#   authorization, authenticated pool, must be able to
#   search the entire directory for users and groups.
# - authn
#   authentication, anonymous pool, used to perform
#   bind requests with user's dn and user's password.
#

include = <common.properties>

pool.authz.auth.type = simple

attrmap.simple-map-namespace.attr.namespace.map = ${seq:simple_attrsBaseDN}

attrmap.simple-map-memberOf.attr.memberOf.map = ${seq:simple_attrMemberOf}

auth-check.default.pool = authn
auth-check.default.reuse-connections = true
auth-check.default.user = ${seq:_simple_bind_user}
auth-check.default.password = ${seq:password}

search.simple-namespace.pool = authz
search.simple-namespace.search-request.baseDN =
search.simple-namespace.search-request.scope = BASE
search.simple-namespace.search-request.filter = &(objectClass=*)
search.simple-namespace.search-request.attributes = ${seq:simple_attrsBaseDN}
search.simple-namespace.attrmap = simple-map-namespace

search.simple-user-fetch.pool = authz
search.simple-user-fetch.search-request.baseDN = ${seq:simple_baseDN}
search.simple-user-fetch.search-request.filter = &${seq:simple_filterUserObject}(${seq:simple_attrsUserName}=${seq:user_encoded})
search.simple-user-fetch.search-request.attributes = ${seq:simple_attrsPrincipalRecord}
search.simple-user-fetch.attrmap = map-principal-record

search.simple-resolve-groups-member.pool = authz
search.simple-resolve-groups-member.search-request.baseDN = ${seq:simple_baseDN}
search.simple-resolve-groups-member.search-request.filter = &${seq:simple_filterGroupObject}(${seq:simple_attrGroupMemberDN}=${seq:_simple_dn_encoded})
search.simple-resolve-groups-member.search-request.attributes = ${seq:simple_attrsGroupRecord}
search.simple-resolve-groups-member.attrmap = map-group-record

search.simple-resolve-groups-memberOf-item.pool = authz
search.simple-resolve-groups-memberOf-item.search-request.baseDN = ${seq:_simple_dn}
search.simple-resolve-groups-memberOf-item.search-request.scope = BASE
search.simple-resolve-groups-memberOf-item.search-request.filter = &(objectClass=*)
search.simple-resolve-groups-memberOf-item.search-request.attributes = ${seq:simple_attrsGroupRecord}
search.simple-resolve-groups-memberOf-item.attrmap = map-group-record

search.simple-resolve-groups-memberOf.pool = authz
search.simple-resolve-groups-memberOf.search-request.baseDN = ${seq:_simple_dn}
search.simple-resolve-groups-memberOf.search-request.scope = BASE
search.simple-resolve-groups-memberOf.search-request.filter = &(objectClass=*)
search.simple-resolve-groups-memberOf.search-request.attributes = ${seq:simple_attrMemberOf}
search.simple-resolve-groups-memberOf.attrmap = simple-map-memberOf

search.simple-query-principals.pool = authz
search.simple-query-principals.search-request.baseDN = ${seq:namespace}
search.simple-query-principals.search-request.filter = &${seq:simple_filterUserObject}${seq:filter}
search.simple-query-principals.search-request.attributes = ${seq:simple_attrsPrincipalRecord}
search.simple-query-principals.attrmap = map-principal-record

search.simple-query-groups.pool = authz
search.simple-query-groups.search-request.baseDN = ${seq:namespace}
search.simple-query-groups.search-request.filter = &${seq:simple_filterGroupObject}${seq:filter}
search.simple-query-groups.search-request.attributes = ${seq:simple_attrsGroupRecord}
search.simple-query-groups.attrmap = map-group-record

sequence-init.init.500-simple-init-vars = simple-init-vars
sequence.simple-init-vars.010.description = set user format: sam for basic, realm for sasl
sequence.simple-init-vars.010.condition.type = var-set
sequence.simple-init-vars.010.condition.not = true
sequence.simple-init-vars.010.condition.var-set.variable = simple_bindFormat
sequence.simple-init-vars.010.type = var-set
sequence.simple-init-vars.010.var-set.variable = simple_bindFormat
sequence.simple-init-vars.010.var-set.value = dn
sequence.simple-init-vars.020.description = set group logic
sequence.simple-init-vars.020.condition.type = var-set
sequence.simple-init-vars.020.condition.not = true
sequence.simple-init-vars.020.condition.var-set.variable = simple_groupLogic
sequence.simple-init-vars.020.type = var-set
sequence.simple-init-vars.020.var-set.variable = simple_groupLogic
sequence.simple-init-vars.020.var-set.value = member
sequence.simple-init-vars.030.description = set group member attribute
sequence.simple-init-vars.030.condition.type = var-set
sequence.simple-init-vars.030.condition.not = true
sequence.simple-init-vars.030.condition.var-set.variable = simple_attrGroupMemberDN
sequence.simple-init-vars.030.type = var-set
sequence.simple-init-vars.030.var-set.variable = simple_attrGroupMemberDN
sequence.simple-init-vars.030.var-set.value = uniqueMember:uniqueMemberMatch:
sequence.simple-init-vars.040.description = set object group membership attribute
sequence.simple-init-vars.040.condition.type = var-set
sequence.simple-init-vars.040.condition.not = true
sequence.simple-init-vars.040.condition.var-set.variable = simple_attrMemberOf
sequence.simple-init-vars.040.type = var-set
sequence.simple-init-vars.040.var-set.variable = simple_attrMemberOf
sequence.simple-init-vars.040.var-set.value = memberOf
sequence.simple-init-vars.050.description = set default index for baseDN
sequence.simple-init-vars.050.condition.type = var-set
sequence.simple-init-vars.050.condition.not = true
sequence.simple-init-vars.050.condition.var-set.variable = simple_attrsBaseDNIndex
sequence.simple-init-vars.050.type = var-set
sequence.simple-init-vars.050.var-set.variable = simple_attrsBaseDNIndex
sequence.simple-init-vars.050.var-set.value = 0

sequence-init.open.500-simple-open-pools-authz = simple-open-pools
sequence.simple-open-pools.010.description = create authz pool
sequence.simple-open-pools.010.type = pool-create
sequence.simple-open-pools.010.pool-create.name = authz
sequence.simple-open-pools.020.description = create authn pool
sequence.simple-open-pools.020.condition.type = var-set
sequence.simple-open-pools.020.condition.var-set.variable = authn_enable
sequence.simple-open-pools.020.type = pool-create
sequence.simple-open-pools.020.pool-create.name = authn

sequence-init.open.900-simple-open-vars = simple-open-vars
sequence.simple-open-vars.010.description = set base DN
sequence.simple-open-vars.010.condition.type = var-set
sequence.simple-open-vars.010.condition.not = true
sequence.simple-open-vars.010.condition.var-set.variable = simple_baseDN
sequence.simple-open-vars.010.type = fetch-record
sequence.simple-open-vars.010.fetch-record.search = simple-namespace
sequence.simple-open-vars.010.fetch-record.map.namespace.name = simple_baseDN
sequence.simple-open-vars.010.fetch-record.map.namespace.select = ${seq:simple_attrsBaseDNIndex}

sequence.simple-resolve-user-error.010.description = error
sequence.simple-resolve-user-error.010.type = var-set
sequence.simple-resolve-user-error.010.var-set.variable = resultCode
sequence.simple-resolve-user-error.010.var-set.value = INVALID_CREDENTIALS
sequence.simple-resolve-user-error.020.description = error
sequence.simple-resolve-user-error.020.type = var-set
sequence.simple-resolve-user-error.020.var-set.variable = authTranslatedMessage
sequence.simple-resolve-user-error.020.var-set.value = CREDENTIALS_INVALID
sequence.simple-resolve-user-error.030.description = stop
sequence.simple-resolve-user-error.030.type = stop

sequence.simple-resolve-user.010.description = resolve user
sequence.simple-resolve-user.010.type = fetch-record
sequence.simple-resolve-user.010.fetch-record.search = simple-user-fetch
sequence.simple-resolve-user.010.fetch-record.map.PrincipalRecord_DN.name = PrincipalRecord_DN
sequence.simple-resolve-user.010.fetch-record.map.PrincipalRecord_PRINCIPAL.name = PrincipalRecord_PRINCIPAL
sequence.simple-resolve-user.020.description = no user?
sequence.simple-resolve-user.020.condition.type = var-set
sequence.simple-resolve-user.020.condition.not = true
sequence.simple-resolve-user.020.condition.var-set.variable = PrincipalRecord_DN
sequence.simple-resolve-user.020.type = call
sequence.simple-resolve-user.020.call.name = simple-resolve-user-error
sequence.simple-resolve-user.030.description = post-fetch validation
sequence.simple-resolve-user.030.condition.type = var-set
sequence.simple-resolve-user.030.condition.var-set.variable = simple_principalPostFetch
sequence.simple-resolve-user.030.type = call
sequence.simple-resolve-user.030.call.name = ${seq:simple_principalPostFetch}
sequence.simple-resolve-user.040-01.description = set bind user
sequence.simple-resolve-user.040-01.condition.type = compare
sequence.simple-resolve-user.040-01.condition.compare.left = ${seq:simple_bindFormat}
sequence.simple-resolve-user.040-01.condition.compare.right = dn
sequence.simple-resolve-user.040-01.type = var-set
sequence.simple-resolve-user.040-01.var-set.variable = _simple_bind_user
sequence.simple-resolve-user.040-01.var-set.value = ${seq:PrincipalRecord_DN}
sequence.simple-resolve-user.040-02.description = set bind user
sequence.simple-resolve-user.040-02.condition.type = compare
sequence.simple-resolve-user.040-02.condition.compare.left = ${seq:simple_bindFormat}
sequence.simple-resolve-user.040-02.condition.compare.right = realm
sequence.simple-resolve-user.040-02.type = var-set
sequence.simple-resolve-user.040-02.var-set.variable = _simple_bind_user
sequence.simple-resolve-user.040-02.var-set.value = ${seq:user}

sequence.simple-authn.010.description = resolve user
sequence.simple-authn.010.type = call
sequence.simple-authn.010.call.name = simple-resolve-user
sequence.simple-authn.020.description = auth check
sequence.simple-authn.020.type = auth-check
sequence.simple-authn.020.auth-check.name = simple-authn

sequence.simple-credentials-change.010.description = resolve user
sequence.simple-credentials-change.010.type = call
sequence.simple-credentials-change.010.call.name = simple-resolve-user
sequence.simple-credentials-change.020.description = resolve user
sequence.simple-credentials-change.020.type = credentials-change
sequence.simple-credentials-change.020.credentials-change.pool = authn
sequence.simple-credentials-change.020.credentials-change.user = ${seq:PrincipalRecord_DN}
sequence.simple-credentials-change.020.credentials-change.password.current = ${seq:password}
sequence.simple-credentials-change.020.credentials-change.password.new = ${seq:passwordNew}

sequence.simple-namespace.010.description = set default namespace
sequence.simple-namespace.010.condition.type = var-set
sequence.simple-namespace.010.condition.var-set.variable = simple_namespaceDefault
sequence.simple-namespace.010.type = var-set
sequence.simple-namespace.010.var-set.variable = namespaceDefault
sequence.simple-namespace.010.var-set.value = ${seq:simple_namespaceDefault}
sequence.simple-namespace.020.description = namespace search
sequence.simple-namespace.020.type = var-list-set
sequence.simple-namespace.020.var-list-set.variable = namespaces
sequence.simple-namespace.020.var-list-set.values.01.value = ${seq:simple_baseDN}

sequence.simple-resolve-principal.010.description = copy principal
sequence.simple-resolve-principal.010.type = var-set
sequence.simple-resolve-principal.010.var-set.variable = user
sequence.simple-resolve-principal.010.var-set.value = ${seq:PrincipalRecord_PRINCIPAL}
sequence.simple-resolve-principal.020.type = search-open
sequence.simple-resolve-principal.020.search-open.search = simple-user-fetch
sequence.simple-resolve-principal.020.search-open.variable = query

sequence.simple-resolve-groups-member.010.description = set dn
sequence.simple-resolve-groups-member.010.type = var-set
sequence.simple-resolve-groups-member.010.var-set.variable = _simple_dn
sequence.simple-resolve-groups-member.010.var-set.value = ${seq:dn}
sequence.simple-resolve-groups-member.020.description = query groups
sequence.simple-resolve-groups-member.020.type = search-open
sequence.simple-resolve-groups-member.020.search-open.search = simple-resolve-groups-member
sequence.simple-resolve-groups-member.020.search-open.variable = querySimpleByDN

sequence.simple-resolve-groups-memberOf-item.010.description = resolve group
sequence.simple-resolve-groups-memberOf-item.010.type = search-open
sequence.simple-resolve-groups-memberOf-item.010.search-open.search = simple-resolve-groups-memberOf-item
sequence.simple-resolve-groups-memberOf-item.010.search-open.variable = querySimpleByDN${seq:forEachIndex}

sequence.simple-resolve-groups-memberOf.010.description = set dn
sequence.simple-resolve-groups-memberOf.010.type = var-set
sequence.simple-resolve-groups-memberOf.010.var-set.variable = _simple_dn
sequence.simple-resolve-groups-memberOf.010.var-set.value = ${seq:dn}
sequence.simple-resolve-groups-memberOf.020.description = enum groups
sequence.simple-resolve-groups-memberOf.020.type = fetch-record
sequence.simple-resolve-groups-memberOf.020.fetch-record.search = simple-resolve-groups-memberOf
sequence.simple-resolve-groups-memberOf.020.fetch-record.map.memberOf.name = _simple_memberOf
sequence.simple-resolve-groups-memberOf.020.fetch-record.map.memberOf.select = -1
sequence.simple-resolve-groups-memberOf.030.description = iterate groups and fetch
sequence.simple-resolve-groups-memberOf.030.type = for-each
sequence.simple-resolve-groups-memberOf.030.for-each.sequence = simple-resolve-groups-memberOf-item
sequence.simple-resolve-groups-memberOf.030.for-each.variable = _simple_memberOf
sequence.simple-resolve-groups-memberOf.030.for-each.var-value = _simple_dn

sequence.simple-resolve-groups.001.description = call simple ${seq:simple_groupLogic}
sequence.simple-resolve-groups.001.type = call
sequence.simple-resolve-groups.001.call.name = simple-resolve-groups-${seq:simple_groupLogic}

sequence.simple-query-principals.010.description = principals search
sequence.simple-query-principals.010.type = search-open
sequence.simple-query-principals.010.search-open.search = simple-query-principals
sequence.simple-query-principals.010.search-open.variable = query

sequence.simple-query-groups.010.description = query groups
sequence.simple-query-groups.010.type = search-open
sequence.simple-query-groups.010.search-open.search = simple-query-groups
sequence.simple-query-groups.010.search-open.variable = query

#
# Stubs
#

sequence.authn.stub.description = call simple
sequence.authn.stub.type = call
sequence.authn.stub.call.name = simple-authn

sequence.credentials-change.stub.description = call simple
sequence.credentials-change.stub.type = call
sequence.credentials-change.stub.call.name = simple-credentials-change

sequence.namespace.stub.description = call simple
sequence.namespace.stub.type = call
sequence.namespace.stub.call.name = simple-namespace

sequence.resolve-principal.stub.description = call simple
sequence.resolve-principal.stub.type = call
sequence.resolve-principal.stub.call.name = simple-resolve-principal

sequence.resolve-groups.stub.description = call simple
sequence.resolve-groups.stub.type = call
sequence.resolve-groups.stub.call.name = simple-resolve-groups

sequence.query-principals.stub.description = call simple
sequence.query-principals.stub.type = call
sequence.query-principals.stub.call.name = simple-query-principals

sequence.query-groups.stub.description = call simple
sequence.query-groups.stub.type = call
sequence.query-groups.stub.call.name = simple-query-groups
