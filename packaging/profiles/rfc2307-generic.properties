#
# Copyright 2012-2015 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#
# Generic rfc2307, ids are based on uidNumber and gidNumber, the groupOfUniqueNames
# are filtered out as no unique id.
#
# Default base DN is namingContexts[0], to modify add the following
# and include this profile:
#
# sequence-init.init.100-my-init-vars = my-init-vars
# sequence.my-init-vars.010.description = set base dn
# sequence.my-init-vars.010.type = var-set
# sequence.my-init-vars.010.var-set.variable = simple_attrsBaseDN
# sequence.my-init-vars.010.var-set.value = namingContexts
#

include = <rfc2307.properties>

attrmap.map-principal-record.attr.PrincipalRecord_ID.map = uidNumber
attrmap.map-principal-record.attr.PrincipalRecord_ID.conversion = REGEX
attrmap.map-principal-record.attr.PrincipalRecord_ID.conversion.REGEX.decode.pattern = ^UID:(?<uidNumber>.*)$
attrmap.map-principal-record.attr.PrincipalRecord_ID.conversion.REGEX.decode.replacement = ${uidNumber}
attrmap.map-principal-record.attr.PrincipalRecord_ID.conversion.REGEX.encode.pattern = ^(?<uidNumber>.*)$
attrmap.map-principal-record.attr.PrincipalRecord_ID.conversion.REGEX.encode.replacement = UID:${uidNumber}

attrmap.map-group-record.attr.GroupRecord_ID.map = gidNumber
attrmap.map-group-record.attr.GroupRecord_ID.conversion = REGEX
attrmap.map-group-record.attr.GroupRecord_ID.conversion.REGEX.decode.pattern = ^GID:(?<gidNumber>.*)$
attrmap.map-group-record.attr.GroupRecord_ID.conversion.REGEX.decode.replacement = ${gidNumber}
attrmap.map-group-record.attr.GroupRecord_ID.conversion.REGEX.encode.pattern = ^(?<gidNumber>.*)$
attrmap.map-group-record.attr.GroupRecord_ID.conversion.REGEX.encode.replacement = GID:${gidNumber}

sequence-init.init.100-rfc2307-generic-init-vars = rfc2307-generic-init-vars
sequence.rfc2307-generic-init-vars.010.description = set base dn
sequence.rfc2307-generic-init-vars.010.condition.type = var-set
sequence.rfc2307-generic-init-vars.010.condition.not = true
sequence.rfc2307-generic-init-vars.010.condition.var-set.variable = simple_attrsBaseDN
sequence.rfc2307-generic-init-vars.010.type = var-set
sequence.rfc2307-generic-init-vars.010.var-set.variable = simple_attrsBaseDN
sequence.rfc2307-generic-init-vars.010.var-set.value = namingContexts
sequence.rfc2307-generic-init-vars.020.description = set unique attr, we do not use it
sequence.rfc2307-generic-init-vars.020.type = var-set
sequence.rfc2307-generic-init-vars.020.var-set.variable = rfc2307_attrsUniqueId
sequence.rfc2307-generic-init-vars.020.var-set.value =
sequence.rfc2307-generic-init-vars.030.description = we need extra user fields
sequence.rfc2307-generic-init-vars.030.type = var-set
sequence.rfc2307-generic-init-vars.030.var-set.variable = rfc2307_attrsUserExtra
sequence.rfc2307-generic-init-vars.030.var-set.value = uidNumber
sequence.rfc2307-generic-init-vars.040.description = we need extra group fields
sequence.rfc2307-generic-init-vars.040.type = var-set
sequence.rfc2307-generic-init-vars.040.var-set.variable = rfc2307_attrsGroupExtra
sequence.rfc2307-generic-init-vars.040.var-set.value = gidNumber
sequence.rfc2307-generic-init-vars.050.description = must find only posixGroup as groupOfUniqueNames does not have unique id
sequence.rfc2307-generic-init-vars.050.type = var-set
sequence.rfc2307-generic-init-vars.050.var-set.variable = simple_filterGroupObject
sequence.rfc2307-generic-init-vars.050.var-set.value = (objectClass=posixGroup)
